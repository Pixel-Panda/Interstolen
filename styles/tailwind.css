@import url('./syntax.css');

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  @apply box-border p-0 m-0;
}

html,
body {
  @apply bg-gray-900 scroll-smooth;
  font-family: 'Inter', sans-serif;
}

h1 {
  @apply text-gray-900 dark:text-white font-semibold !text-2xl;
}

h3 {
  @apply text-gray-900 dark:text-white font-bold text-base;
}

::-moz-selection {
  color: #e5e5e5;
  background: #3c3c3c;
}

::selection {
  color: #e5e5e5;
  background: #3c3c3c;
}

button {
  @apply cursor-pointer select-none;
}

button,
input,
textarea {
  font-family: 'Inter', sans-serif;
}

a {
  @apply text-gray-300 underline-offset-4 transition-colors;
}

a:hover {
  @apply text-gray-900 dark:text-white;
}

p,
li {
  @apply text-gray-600 text-base;
}

li {
  @apply ml-10 list-disc my-2;
}

img {
  @apply sm:h-fit select-none;
}

i {
  @apply text-black dark:text-white font-serif;
}

::placeholder {
  @apply text-white;
}

.blog a,
.link {
  @apply text-white;
}

.blog > .header {
  @apply no-underline;
}

.blog p {
  @apply text-base my-4 leading-7;
}

.blog img {
  @apply block rounded sm:rounded-xl my-24 w-full lg:scale-110;
}

.rehype-code-title {
  @apply px-5 py-3 text-sm text-gray-800 font-mono bg-gray-200 border border-b-0 border-gray-200 rounded-t-lg dark:text-gray-200 dark:border-gray-700 dark:bg-gray-800 mt-5;
}

code[class*='language-'],
pre[class*='language-'] {
  @apply text-white;
}

.blog pre {
  @apply border border-gray-200 dark:border-gray-700 bg-gray-100 dark:bg-gray-900 px-5 py-3 rounded-b-lg overflow-x-auto;
}

.blog code {
  @apply text-gray-900 dark:text-gray-200 px-1 py-0.5 border dark:border-gray-700 rounded-lg bg-gray-100 dark:bg-gray-900 overflow-scroll !text-sm;
}

.blog pre code {
  @apply text-gray-900 dark:text-gray-200 p-0;
  border: initial;
}

.blog thead {
  @apply text-gray-900 dark:text-white text-base text-left;
}

.blog td,
th {
  @apply text-white py-5 px-7;
}

.blog td {
  @apply text-gray-600;
}

.blog p > code {
  @apply text-base text-gray-400 rounded;
}

.blog blockquote {
  @apply italic border-l-4 pl-4 border-gray-700 bg-gray-700/50 py-1 rounded my-5;
}

/* padding isn't working on next/image component */
.p-6 {
  padding: 20px !important;
  border-radius: 30px;
}

.open {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: fixed;
  display: flex;
  justify-content: center;
  height: 100vh;
  width: 100vh;
  margin: auto;
}

.loading {
  @apply w-5 h-5 border-4 border-solid border-[#bdbdbd] dark:border-gray-600 border-t-[#888888] dark:border-t-white;
  border-radius: 50%;
  animation: spin 1s ease-in-out infinite;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes disco {
  from {
    transform: translateY(-50%) rotate(0deg);
  }
  to {
    transform: translateY(-50%) rotate(360deg);
  }
}

.button {
  --button-color-bg: rgb(24 24 27);
  --button-color-border: #ffffff;
  --button-color-disco: #ff70c6;
  --button-color-text: rgb(255, 255, 255);
  --button-color-text-busy: rgb(113 113 122);
  --button-border-width: 1px;
  --button-disco-animation: disco 1.5s linear infinite;
  --button-disco-gradient-stops: transparent 135deg,
    var(--button-color-disco) 180deg, transparent 225deg;
  --button-disco-opacity: 1;
  --button-radius: 0.5rem;
  --button-transition-duration: 200ms;
  --button-transition-easing: cubic-bezier(0.4, 0, 0.2, 1);
  --button-transition: var(--button-transition-duration)
    var(--button-transition-easing);
  --button-aspect-ratio-multiplier: 0.65;
  appearance: none;
  position: relative;
  border: 0;
  width: 150px;
  overflow: hidden;
  margin: calc(var(--button-border-width) * -1);
  padding: var(--button-border-width);
  color: var(--button-color-text);
  border-radius: var(--button-radius);
  transform: none;
  user-select: none;
  will-change: transform;
  @apply bg-gray-200 dark:bg-gray-700;
}

.button:active {
  transform: scale(0.95);
}

@media (prefers-reduced-motion: no-preference) {
  .button {
    transition: var(--button-transition);
    transition-property: color, filter, transform;
  }
}

.button__content {
  display: inline-flex;
  position: relative;
  border-radius: calc(var(--button-radius) - var(--button-border-width));
  @apply bg-gray-100 dark:bg-gray-900;
  width: 100%;
  justify-content: center;
  padding: 0.625rem 1rem;
  text-align: center;
  z-index: 10;
}

.button__disco,
.button__disco::before {
  position: absolute;
  width: 100%;
}

.button__disco {
  inset: 0;
  height: 100%;
  top: 50%;
  transform: translateY(-50%)
    scaleX(
      calc(var(--button-aspect-ratio) * var(--button-aspect-ratio-multiplier))
    );
  will-change: transform;
}

.button__disco::before {
  content: '';
  position: absolute;
  left: 0;
  min-height: 100%;
  top: 50%;
  aspect-ratio: 1/1;
  transform-origin: center;
  background-image: conic-gradient(var(--button-disco-gradient-stops));
  opacity: var(--button-disco-opacity-enabled, 0);
  filter: blur(8px);
}

@media (prefers-reduced-motion: reduce) {
  .button__disco::before {
    transform: translateY(-50%) rotate(0deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  .button__disco::before {
    animation: var(--button-disco-animation);
    animation-play-state: var(--button-disco-animation-state, paused);
    transition: var(--button-transition);
    transition-property: opacity;
  }
}

.button.is-busy {
  --button-color-text: var(--button-color-text-busy);
  --button-disco-animation-state: running;
  --button-disco-opacity-enabled: var(--button-disco-opacity);
  cursor: progress;
}

.img {
  --img-blur: 42px;
  --img-scale: 1.5;
  --img-transition-duration: 1.2s;
  display: block;
  position: relative;
  overflow: hidden;
  transform: translateZ(0);
  padding-bottom: var(--img-aspect-ratio);
}

.img__element,
.img__placeholder {
  inset: 0;
  position: absolute;
  display: block;
  max-width: 100%;
  width: 100%;
}

.img__element {
  font-size: 0;
  opacity: 0;
}

.img--blur-down .img__element,
.img--blur-down .img__placeholder {
  filter: blur(var(--img-blur));
  transform: scale(var(--img-scale));
}

@media (prefers-reduced-motion: no-preference) {
  .img--blur-down .img__element {
    transition: var(--img-transition-duration) ease;
    transition-property: filter, opacity, transform;
    will-change: filter, transform;
  }
}

.img--blur-down.is-loaded .img__element {
  opacity: 1;
  transform: scale(1);
  filter: blur(0);
}
