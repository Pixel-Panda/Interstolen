@import url('./syntax.css');

@tailwind components;
@tailwind utilities;

/* padding isn't working on next/image component */
.p-6 {
  padding: 20px !important;
  border-radius: 30px;
}

.open {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: fixed;
  display: flex;
  justify-content: center;
  height: 100vh;
  width: 100vh;
  margin: auto;
}

.loading {
  @apply w-5 h-5 border-4 border-solid border-gray-600 border-t-white;
  border-radius: 50%;
  animation: spin 1s ease-in-out infinite;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes disco {
  from {
    transform: translateY(-50%) rotate(0deg);
  }
  to {
    transform: translateY(-50%) rotate(360deg);
  }
}

.button {
  --button-color-bg: rgb(24 24 27);
  --button-color-border: #ffffff;
  --button-color-disco: #ff70c6;
  --button-color-text: rgb(255, 255, 255);
  --button-color-text-busy: rgb(113 113 122);
  --button-border-width: 1px;
  --button-disco-animation: disco 1.5s linear infinite;
  --button-disco-gradient-stops: transparent 135deg,
    var(--button-color-disco) 180deg, transparent 225deg;
  --button-disco-opacity: 1;
  --button-radius: 0.5rem;
  --button-transition-duration: 200ms;
  --button-transition-easing: cubic-bezier(0.4, 0, 0.2, 1);
  --button-transition: var(--button-transition-duration)
    var(--button-transition-easing);
  --button-aspect-ratio-multiplier: 0.65;
  appearance: none;
  position: relative;
  border: 0;
  width: 150px;
  overflow: hidden;
  margin: calc(var(--button-border-width) * -1);
  padding: var(--button-border-width);
  color: var(--button-color-text);
  border-radius: var(--button-radius);
  transform: none;
  user-select: none;
  will-change: transform;
  background-color: rgb(46 46 46);
}

.button:active {
  transform: scale(0.95);
}

@media (prefers-reduced-motion: no-preference) {
  .button {
    transition: var(--button-transition);
    transition-property: color, filter, transform;
  }
}

.button_content {
  display: inline-flex;
  position: relative;
  border-radius: calc(var(--button-radius) - var(--button-border-width));
  background-color: rgb(28 28 28);
  width: 100%;
  justify-content: center;
  padding: 15px 0;
  text-align: center;
  z-index: 10;
}

.button_disco,
.button_disco::before {
  position: absolute;
  width: 100%;
}

.button_disco {
  inset: 0;
  height: 100%;
  top: 50%;
  transform: translateY(-50%)
    scaleX(
      calc(var(--button-aspect-ratio) * var(--button-aspect-ratio-multiplier))
    );
  will-change: transform;
}

.button_disco::before {
  content: '';
  position: absolute;
  left: 0;
  min-height: 100%;
  top: 50%;
  aspect-ratio: 1/1;
  transform-origin: center;
  background-image: conic-gradient(var(--button-disco-gradient-stops));
  opacity: var(--button-disco-opacity-enabled, 0);
  filter: blur(8px);
}

@media (prefers-reduced-motion: reduce) {
  .button_disco::before {
    transform: translateY(-50%) rotate(0deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  .button_disco::before {
    animation: var(--button-disco-animation);
    animation-play-state: var(--button-disco-animation-state, paused);
    transition: var(--button-transition);
    transition-property: opacity;
  }
}

.button.is-busy {
  --button-color-text: var(--button-color-text-busy);
  --button-disco-animation-state: running;
  --button-disco-opacity-enabled: var(--button-disco-opacity);
  cursor: progress;
}

.img {
  --img-blur: 42px;
  --img-scale: 1.5;
  --img-transition-duration: 1.2s;
  display: block;
  position: relative;
  overflow: hidden;
  transform: translateZ(0);
  padding-bottom: var(--img-aspect-ratio);
}

.img__element,
.img__placeholder {
  inset: 0;
  position: absolute;
  display: block;
  max-width: 100%;
  width: 100%;
}

.img__element {
  font-size: 0;
  opacity: 0;
}

.img--blur-down .img__element,
.img--blur-down .img__placeholder {
  filter: blur(var(--img-blur));
  transform: scale(var(--img-scale));
}

@media (prefers-reduced-motion: no-preference) {
  .img--blur-down .img__element {
    transition: var(--img-transition-duration) ease;
    transition-property: filter, opacity, transform;
    will-change: filter, transform;
  }
}

.img--blur-down.is-loaded .img__element {
  opacity: 1;
  transform: scale(1);
  filter: blur(0);
}
